<UserControl x:Class="X13.UI.InspectorForm"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:at="clr-namespace:Xceed.Wpf.AvalonDock.Themes;assembly=Xceed.Wpf.AvalonDock.Themes.Aero"
             xmlns:x13ui="clr-namespace:X13.UI"
             mc:Ignorable="d" 
             FontFamily="Consolas" FontSize="12">
  <Grid>
    <Grid.Resources>
      <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate>
              <Rectangle/>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
      <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
              <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
                  <Path.RenderTransform>
                    <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                  </Path.RenderTransform>
                </Path>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                  <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                  <Setter Property="RenderTransform" TargetName="ExpandPath">
                    <Setter.Value>
                      <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                  <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <BitmapImage x:Key="NullImage" UriSource="/Dashboard;component/Images/ty_topic.png" />
      <DataTemplate x:Key="EditTemplate">
        <TextBox Text="{Binding name, Mode=OneTime}" MaxLines="1" UndoLimit="10" Margin="0,1,3,0" Background="Azure" VerticalAlignment="Top" BorderThickness="0" Loaded="tbItemName_Loaded" PreviewKeyDown="tbItemName_PreviewKeyDown" LostFocus="tbItemName_LostFocus" />
      </DataTemplate>
    </Grid.Resources>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition />
    </Grid.RowDefinitions>
    <TreeView Grid.Row="0" x:Name="tvValue" BorderThickness="0">
      <TreeView.ItemContainerStyle>
        <Style TargetType="{x:Type TreeViewItem}">
          <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
          <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
          <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
          <Setter Property="Margin" Value="0" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type TreeViewItem}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="19"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition MinHeight="20" Height="Auto"/>
                    <RowDefinition/>
                  </Grid.RowDefinitions>
                  <Border           Grid.Column="0" Grid.Row="0" x:Name="BTop" BorderBrush="Black" BorderThickness="0,1,0,0" Margin="-9,10,10,10" VerticalAlignment="Top" Focusable="False" />
                  <Border           Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" x:Name="BLine" BorderBrush="Black" BorderThickness="1,0,0,1" Margin="10,10,5,10" Visibility="Collapsed" Focusable="False" />
                  <ToggleButton     Grid.Column="0" Grid.Row="0" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" />
                  <Border           Grid.Column="1" Grid.Row="0" x:Name="BContent" BorderThickness="1,1,0,1">
                    <Border.Style>
                      <Style TargetType="Border">
                        <Setter Property="Background" Value="{DynamicResource {x:Static at:AeroColors.BaseColor2Key}}" />
                        <Setter Property="BorderBrush" Value="LightGray" />
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsGroupHeader}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static at:AeroColors.BaseColor17Key}}" />
                            <Setter Property="BorderBrush">
                              <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                  <GradientStop Color="Black" Offset="0"/>
                                  <GradientStop Color="LightGray" Offset="0.1"/>
                                </LinearGradientBrush>
                              </Setter.Value>
                            </Setter>
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </Border.Style>
                    <Grid ContextMenuOpening="Grid_ContextMenuOpening" ContextMenuClosing="Grid_ContextMenuClosing">
                      <Grid.CommandBindings>
                        <CommandBinding Command="ApplicationCommands.Open" CanExecute="CmdDelete_CanExecute" Executed="CommandBinding_Executed"  />
                        <CommandBinding Command="ApplicationCommands.New" CanExecute="CmdDelete_CanExecute" Executed="CommandBinding_Executed"  />
                        <CommandBinding Command="ApplicationCommands.Delete" CanExecute="CmdDelete_CanExecute" Executed="CommandBinding_Executed" />
                        <CommandBinding Command="x13ui:InspectorForm.CmdRename" CanExecute="CmdDelete_CanExecute" Executed="CommandBinding_Executed" />
                      </Grid.CommandBindings>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="Auto" MinWidth="80" SharedSizeGroup="vcName"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <Grid.ContextMenu>
                        <ContextMenu />
                      </Grid.ContextMenu>
                      <Image            Grid.Column="0" Grid.Row="0" Source="{Binding icon}" VerticalAlignment="Top" Width="16" Height="16" Margin="0,1" />
                      <ContentPresenter Grid.Column="1" Grid.Row="0" Content="{Binding}">
                        <ContentPresenter.Style>
                          <Style TargetType="{x:Type ContentPresenter}">
                            <Setter Property="ContentTemplate">
                              <Setter.Value>
                                <DataTemplate>
                                  <TextBlock Text="{Binding name}" Margin="3,2,5,0" VerticalAlignment="Top" Foreground="Black" />
                                </DataTemplate>
                              </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding IsEdited}" Value="True">
                                <Setter Property="ContentTemplate" Value="{StaticResource EditTemplate}" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </ContentPresenter.Style>
                      </ContentPresenter>
                      <Border Grid.Column="2" Grid.Row="0" BorderBrush="Black" BorderThickness="1,0,0,0">
                        <ContentPresenter Margin="0,1" Content="{Binding editor}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                      </Border>
                    </Grid>
                  </Border>
                  <ItemsPresenter   Grid.Column="1" Grid.Row="1" x:Name="ItemsHost" />
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsExpanded" Value="false">
                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                  </Trigger>
                  <Trigger Property="HasItems" Value="false">
                    <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                  </Trigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="IsExpanded" Value="true" />
                      <Condition Property="HasItems" Value="true" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility" TargetName="BLine" Value="Visible"/>
                  </MultiTrigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="IsSelected" Value="true"/>
                      <Condition Property="IsSelectionActive" Value="true"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" TargetName="BContent" Value="Black" />
                  </MultiTrigger>
                  <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
              <Setter Property="ItemsPanel">
                <Setter.Value>
                  <ItemsPanelTemplate>
                    <VirtualizingStackPanel HorizontalAlignment="Stretch"/>
                  </ItemsPanelTemplate>
                </Setter.Value>
              </Setter>
            </Trigger>
          </Style.Triggers>
        </Style>
      </TreeView.ItemContainerStyle>
      <TreeView.ItemTemplate>
        <HierarchicalDataTemplate DataType="{x:Type x13ui:InBase}"  ItemsSource="{Binding items}" />
      </TreeView.ItemTemplate>
    </TreeView>
  </Grid>
</UserControl>
